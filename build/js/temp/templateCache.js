angular.module("templatescache", []).run(["$templateCache", function($templateCache) {$templateCache.put("home.html","<h1> Welcome to JEAN</h1>\n<p>Jean combines jquery, express, angular and node to automate and compile simple web projects.</p>\n<p>It comes with ng-animate, ng-route, $templatecache, and sass setup with gulp used to automate and compile.</p>\n<hr/>\n\n<h2>Routes</h2>\n<p>Angular uses templates to dynamically load in content pages. In JEAN, angular has been setup to use the $templateCache so your views will load instantaniously.</p> <br/>\n\n<h3>Home</h3>\n<p>This is the home view, it uses the main controller. It is accessed at / or /#/.</p>\n<br/>\n\n<h3>Views 1 &amp; 2</h3>\n<p>The first and second views share the same controller as home. Their routes are /#/view1 and /#/view2.</p>\n<br/>\n\n<h3>View 3 &amp; 3/id</h3>\n<p>The third route can also take an argument called id. To specify the id, just add it to the normal route of /#/3/</p>\n<br/>\n<p>Try it, enter an ID like your name and hit go:</p>\n<p><input type=\"text\" ng-model=\"view3id\"> <a ng-href=\"#/view3/{{view3id}}\"> GO</a></p>\n<br/>\n\n<h4>+ Add more</h4>\n<p>Add as many views as you need. Just create a new .html file in /views and define a route in angular.</p>\n\n<hr/>\n<h2>Styling the app</h2>\n<p> There is a stylesheet.scss and three partial files set up with limitted styles pre-defined. Add a css framework or define your own styles to get the site looking snazzy.</p>\n\n\n<hr/>\n");
$templateCache.put("view1.html","<h1> This is view 1 </h1>");
$templateCache.put("view2.html","<h1>This is view 2 </h1>");
$templateCache.put("view3.html","<h1> View 3 </h1>\n<p> The route params are: {{routeId}}</p>");}]);